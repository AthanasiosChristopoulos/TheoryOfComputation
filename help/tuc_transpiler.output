Nonterminals useless in grammar

    arithmetic_expr_non_empty
    parameter_definition


Terminals unused in grammar

    DECIMAL
    KW_IF
    KW_ELSE
    KW_ENDIF
    KW_IN
    KW_OF
    KW_WHILE
    KW_ENDWHILE
    KW_FOR
    KW_ENDFOR
    KW_BREAK
    KW_CONTINUE
    KW_TRUE
    KW_FALSE
    KW_VAR
    KW_INT
    KW_REAL
    KW_FUNC
    KW_BEGIN
    KW_DEF
    KW_ENDDEF
    KW_COMP
    KW_ENDCOMP
    KW_RETURN
    KW_MAIN
    KW_FUNC_RETURN


Rules useless in grammar

   42 arithmetic_expr_non_empty: POSINT
   43                          | REAL
   44                          | IDENTIFIER
   45                          | '(' expr ')'
   46                          | expr EXPONENTIATION_OP expr
   47                          | expr CALC_OP expr
   48                          | expr RELATIONAL_OP expr
   49                          | expr LOGICAL_AND_OR_OP expr
   50                          | LOGICAL_NOT_OP expr
   51                          | UNARY_OP expr

   52 parameter_definition: IDENTIFIER ':' KW_VARIABLE_TYPE
   53                     | IDENTIFIER '[' POSINT ']' ':' KW_VARIABLE_TYPE
   54                     | IDENTIFIER '[' ']' ':' KW_VARIABLE_TYPE


Grammar

    0 $accept: program $end

    1 program: input

    2 input: ε
    3      | input expr ';'
    4      | input variable_definition ';'
    5      | input func_call ';'
    6      | input macro

    7 macro: KW_MACRO IDENTIFIER STRING
    8      | KW_MACRO IDENTIFIER expr

    9 func_call: IDENTIFIER '(' func_args ')'

   10 func_args: ε
   11          | expr
   12          | STRING
   13          | func_args ',' expr
   14          | func_args ',' STRING

   15 expr: POSINT
   16     | REAL
   17     | IDENTIFIER
   18     | '(' expr ')'
   19     | IDENTIFIER '[' expr ']'
   20     | expr CALC_OP expr
   21     | expr EXPONENTIATION_OP expr
   22     | expr RELATIONAL_OP expr
   23     | expr LOGICAL_AND_OR_OP expr
   24     | LOGICAL_NOT_OP expr
   25     | UNARY_OP expr
   26     | IDENTIFIER ASSIGNMENT_OP expr
   27     | IDENTIFIER '[' expr ']' ASSIGNMENT_OP expr

   28 variable_definition: variable_list ':' KW_VARIABLE_TYPE
   29                    | IDENTIFIER '[' POSINT ']' ':' KW_VARIABLE_TYPE
   30                    | IDENTIFIER '[' ']' ':' KW_VARIABLE_TYPE
   31                    | KW_CONST IDENTIFIER ASSIGNMENT_OP VALUE ':' KW_VARIABLE_TYPE

   32 VALUE: POSINT
   33      | REAL
   34      | STRING

   35 KW_VARIABLE_TYPE: KW_SCALAR
   36                 | KW_INTEGER
   37                 | KW_STR
   38                 | KW_BOOLEAN
   39                 | IDENTIFIER

   40 variable_list: IDENTIFIER
   41              | variable_list ',' IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 9 18
    ')' (41) 9 18
    ',' (44) 13 14 41
    ':' (58) 28 29 30 31
    ';' (59) 3 4 5
    '[' (91) 19 27 29 30
    ']' (93) 19 27 29 30
    error (256)
    IDENTIFIER <str> (258) 7 8 9 17 19 26 27 29 30 31 39 40 41
    POSINT <str> (259) 15 29 32
    STRING <str> (260) 7 12 14 34
    DECIMAL <str> (261)
    REAL <str> (262) 16 33
    KW_IF <str> (263)
    KW_ELSE <str> (264)
    KW_ENDIF <str> (265)
    KW_IN <str> (266)
    KW_OF <str> (267)
    KW_WHILE <str> (268)
    KW_ENDWHILE <str> (269)
    KW_FOR <str> (270)
    KW_ENDFOR <str> (271)
    KW_BREAK <str> (272)
    KW_CONTINUE <str> (273)
    KW_TRUE <str> (274)
    KW_FALSE <str> (275)
    KW_VAR <str> (276)
    KW_INT <str> (277)
    KW_REAL <str> (278)
    KW_FUNC <str> (279)
    KW_BEGIN <str> (280)
    KW_DEF <str> (281)
    KW_ENDDEF <str> (282)
    KW_COMP <str> (283)
    KW_ENDCOMP <str> (284)
    KW_MACRO <str> (285) 7 8
    KW_RETURN <str> (286)
    KW_MAIN <str> (287)
    KW_FUNC_RETURN <str> (288)
    KW_INTEGER <str> (289) 36
    KW_SCALAR <str> (290) 35
    KW_STR <str> (291) 37
    KW_CONST <str> (292) 31
    KW_BOOLEAN <str> (293) 38
    EXPONENTIATION_OP <str> (294) 21
    CALC_OP <str> (295) 20
    UNARY_OP <str> (296) 25
    RELATIONAL_OP <str> (297) 22
    LOGICAL_NOT_OP <str> (298) 24
    LOGICAL_AND_OR_OP <str> (299) 23
    ASSIGNMENT_OP <str> (300) 26 27 31


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1
        on right: 0
    input <str> (55)
        on left: 2 3 4 5 6
        on right: 1 3 4 5 6
    macro <str> (56)
        on left: 7 8
        on right: 6
    func_call <str> (57)
        on left: 9
        on right: 5
    func_args <str> (58)
        on left: 10 11 12 13 14
        on right: 9 13 14
    expr <str> (59)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27
        on right: 3 8 11 13 18 19 20 21 22 23 24 25 26 27
    variable_definition <str> (60)
        on left: 28 29 30 31
        on right: 4
    VALUE <str> (61)
        on left: 32 33 34
        on right: 31
    KW_VARIABLE_TYPE <str> (62)
        on left: 35 36 37 38 39
        on right: 28 29 30 31
    variable_list <str> (63)
        on left: 40 41
        on right: 28 41


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (input)

    program  go to state 1
    input    go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: input •
    3 input: input • expr ';'
    4      | input • variable_definition ';'
    5      | input • func_call ';'
    6      | input • macro

    IDENTIFIER      shift, and go to state 4
    POSINT          shift, and go to state 5
    REAL            shift, and go to state 6
    KW_MACRO        shift, and go to state 7
    KW_CONST        shift, and go to state 8
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    $default  reduce using rule 1 (program)

    macro                go to state 12
    func_call            go to state 13
    expr                 go to state 14
    variable_definition  go to state 15
    variable_list        go to state 16


State 3

    0 $accept: program $end •

    $default  accept


State 4

    9 func_call: IDENTIFIER • '(' func_args ')'
   17 expr: IDENTIFIER •
   19     | IDENTIFIER • '[' expr ']'
   26     | IDENTIFIER • ASSIGNMENT_OP expr
   27     | IDENTIFIER • '[' expr ']' ASSIGNMENT_OP expr
   29 variable_definition: IDENTIFIER • '[' POSINT ']' ':' KW_VARIABLE_TYPE
   30                    | IDENTIFIER • '[' ']' ':' KW_VARIABLE_TYPE
   40 variable_list: IDENTIFIER •

    ASSIGNMENT_OP  shift, and go to state 17
    '['            shift, and go to state 18
    '('            shift, and go to state 19

    ','       reduce using rule 40 (variable_list)
    ':'       reduce using rule 40 (variable_list)
    $default  reduce using rule 17 (expr)


State 5

   15 expr: POSINT •

    $default  reduce using rule 15 (expr)


State 6

   16 expr: REAL •

    $default  reduce using rule 16 (expr)


State 7

    7 macro: KW_MACRO • IDENTIFIER STRING
    8      | KW_MACRO • IDENTIFIER expr

    IDENTIFIER  shift, and go to state 20


State 8

   31 variable_definition: KW_CONST • IDENTIFIER ASSIGNMENT_OP VALUE ':' KW_VARIABLE_TYPE

    IDENTIFIER  shift, and go to state 21


State 9

   25 expr: UNARY_OP • expr

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 23


State 10

   24 expr: LOGICAL_NOT_OP • expr

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 24


State 11

   18 expr: '(' • expr ')'

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 25


State 12

    6 input: input macro •

    $default  reduce using rule 6 (input)


State 13

    5 input: input func_call • ';'

    ';'  shift, and go to state 26


State 14

    3 input: input expr • ';'
   20 expr: expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr

    ';'                shift, and go to state 27
    EXPONENTIATION_OP  shift, and go to state 28
    CALC_OP            shift, and go to state 29
    RELATIONAL_OP      shift, and go to state 30
    LOGICAL_AND_OR_OP  shift, and go to state 31


State 15

    4 input: input variable_definition • ';'

    ';'  shift, and go to state 32


State 16

   28 variable_definition: variable_list • ':' KW_VARIABLE_TYPE
   41 variable_list: variable_list • ',' IDENTIFIER

    ','  shift, and go to state 33
    ':'  shift, and go to state 34


State 17

   26 expr: IDENTIFIER ASSIGNMENT_OP • expr

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 35


State 18

   19 expr: IDENTIFIER '[' • expr ']'
   27     | IDENTIFIER '[' • expr ']' ASSIGNMENT_OP expr
   29 variable_definition: IDENTIFIER '[' • POSINT ']' ':' KW_VARIABLE_TYPE
   30                    | IDENTIFIER '[' • ']' ':' KW_VARIABLE_TYPE

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 36
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    ']'             shift, and go to state 37
    '('             shift, and go to state 11

    expr  go to state 38


State 19

    9 func_call: IDENTIFIER '(' • func_args ')'

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    STRING          shift, and go to state 39
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    $default  reduce using rule 10 (func_args)

    func_args  go to state 40
    expr       go to state 41


State 20

    7 macro: KW_MACRO IDENTIFIER • STRING
    8      | KW_MACRO IDENTIFIER • expr

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    STRING          shift, and go to state 42
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 43


State 21

   31 variable_definition: KW_CONST IDENTIFIER • ASSIGNMENT_OP VALUE ':' KW_VARIABLE_TYPE

    ASSIGNMENT_OP  shift, and go to state 44


State 22

   17 expr: IDENTIFIER •
   19     | IDENTIFIER • '[' expr ']'
   26     | IDENTIFIER • ASSIGNMENT_OP expr
   27     | IDENTIFIER • '[' expr ']' ASSIGNMENT_OP expr

    ASSIGNMENT_OP  shift, and go to state 17
    '['            shift, and go to state 45

    $default  reduce using rule 17 (expr)


State 23

   20 expr: expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr
   25     | UNARY_OP expr •

    RELATIONAL_OP      shift, and go to state 30
    LOGICAL_AND_OR_OP  shift, and go to state 31

    $default  reduce using rule 25 (expr)


State 24

   20 expr: expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr
   24     | LOGICAL_NOT_OP expr •

    LOGICAL_AND_OR_OP  shift, and go to state 31

    $default  reduce using rule 24 (expr)


State 25

   18 expr: '(' expr • ')'
   20     | expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr

    EXPONENTIATION_OP  shift, and go to state 28
    CALC_OP            shift, and go to state 29
    RELATIONAL_OP      shift, and go to state 30
    LOGICAL_AND_OR_OP  shift, and go to state 31
    ')'                shift, and go to state 46


State 26

    5 input: input func_call ';' •

    $default  reduce using rule 5 (input)


State 27

    3 input: input expr ';' •

    $default  reduce using rule 3 (input)


State 28

   21 expr: expr EXPONENTIATION_OP • expr

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 47


State 29

   20 expr: expr CALC_OP • expr

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 48


State 30

   22 expr: expr RELATIONAL_OP • expr

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 49


State 31

   23 expr: expr LOGICAL_AND_OR_OP • expr

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 50


State 32

    4 input: input variable_definition ';' •

    $default  reduce using rule 4 (input)


State 33

   41 variable_list: variable_list ',' • IDENTIFIER

    IDENTIFIER  shift, and go to state 51


State 34

   28 variable_definition: variable_list ':' • KW_VARIABLE_TYPE

    IDENTIFIER  shift, and go to state 52
    KW_INTEGER  shift, and go to state 53
    KW_SCALAR   shift, and go to state 54
    KW_STR      shift, and go to state 55
    KW_BOOLEAN  shift, and go to state 56

    KW_VARIABLE_TYPE  go to state 57


State 35

   20 expr: expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr
   26     | IDENTIFIER ASSIGNMENT_OP expr •

    $default  reduce using rule 26 (expr)


State 36

   15 expr: POSINT •
   29 variable_definition: IDENTIFIER '[' POSINT • ']' ':' KW_VARIABLE_TYPE

    ']'  shift, and go to state 58

    $default  reduce using rule 15 (expr)


State 37

   30 variable_definition: IDENTIFIER '[' ']' • ':' KW_VARIABLE_TYPE

    ':'  shift, and go to state 59


State 38

   19 expr: IDENTIFIER '[' expr • ']'
   20     | expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr
   27     | IDENTIFIER '[' expr • ']' ASSIGNMENT_OP expr

    EXPONENTIATION_OP  shift, and go to state 28
    CALC_OP            shift, and go to state 29
    RELATIONAL_OP      shift, and go to state 30
    LOGICAL_AND_OR_OP  shift, and go to state 31
    ']'                shift, and go to state 60


State 39

   12 func_args: STRING •

    $default  reduce using rule 12 (func_args)


State 40

    9 func_call: IDENTIFIER '(' func_args • ')'
   13 func_args: func_args • ',' expr
   14          | func_args • ',' STRING

    ')'  shift, and go to state 61
    ','  shift, and go to state 62


State 41

   11 func_args: expr •
   20 expr: expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr

    EXPONENTIATION_OP  shift, and go to state 28
    CALC_OP            shift, and go to state 29
    RELATIONAL_OP      shift, and go to state 30
    LOGICAL_AND_OR_OP  shift, and go to state 31

    $default  reduce using rule 11 (func_args)


State 42

    7 macro: KW_MACRO IDENTIFIER STRING •

    $default  reduce using rule 7 (macro)


State 43

    8 macro: KW_MACRO IDENTIFIER expr •
   20 expr: expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr

    EXPONENTIATION_OP  shift, and go to state 28
    CALC_OP            shift, and go to state 29
    RELATIONAL_OP      shift, and go to state 30
    LOGICAL_AND_OR_OP  shift, and go to state 31

    $default  reduce using rule 8 (macro)


State 44

   31 variable_definition: KW_CONST IDENTIFIER ASSIGNMENT_OP • VALUE ':' KW_VARIABLE_TYPE

    POSINT  shift, and go to state 63
    STRING  shift, and go to state 64
    REAL    shift, and go to state 65

    VALUE  go to state 66


State 45

   19 expr: IDENTIFIER '[' • expr ']'
   27     | IDENTIFIER '[' • expr ']' ASSIGNMENT_OP expr

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 38


State 46

   18 expr: '(' expr ')' •

    $default  reduce using rule 18 (expr)


State 47

   20 expr: expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   21     | expr EXPONENTIATION_OP expr •
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr

    EXPONENTIATION_OP  shift, and go to state 28
    CALC_OP            shift, and go to state 29
    RELATIONAL_OP      shift, and go to state 30
    LOGICAL_AND_OR_OP  shift, and go to state 31

    $default  reduce using rule 21 (expr)


State 48

   20 expr: expr • CALC_OP expr
   20     | expr CALC_OP expr •
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr

    RELATIONAL_OP      shift, and go to state 30
    LOGICAL_AND_OR_OP  shift, and go to state 31

    $default  reduce using rule 20 (expr)


State 49

   20 expr: expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   22     | expr RELATIONAL_OP expr •
   23     | expr • LOGICAL_AND_OR_OP expr

    LOGICAL_AND_OR_OP  shift, and go to state 31

    $default  reduce using rule 22 (expr)


State 50

   20 expr: expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr
   23     | expr LOGICAL_AND_OR_OP expr •

    $default  reduce using rule 23 (expr)


State 51

   41 variable_list: variable_list ',' IDENTIFIER •

    $default  reduce using rule 41 (variable_list)


State 52

   39 KW_VARIABLE_TYPE: IDENTIFIER •

    $default  reduce using rule 39 (KW_VARIABLE_TYPE)


State 53

   36 KW_VARIABLE_TYPE: KW_INTEGER •

    $default  reduce using rule 36 (KW_VARIABLE_TYPE)


State 54

   35 KW_VARIABLE_TYPE: KW_SCALAR •

    $default  reduce using rule 35 (KW_VARIABLE_TYPE)


State 55

   37 KW_VARIABLE_TYPE: KW_STR •

    $default  reduce using rule 37 (KW_VARIABLE_TYPE)


State 56

   38 KW_VARIABLE_TYPE: KW_BOOLEAN •

    $default  reduce using rule 38 (KW_VARIABLE_TYPE)


State 57

   28 variable_definition: variable_list ':' KW_VARIABLE_TYPE •

    $default  reduce using rule 28 (variable_definition)


State 58

   29 variable_definition: IDENTIFIER '[' POSINT ']' • ':' KW_VARIABLE_TYPE

    ':'  shift, and go to state 67


State 59

   30 variable_definition: IDENTIFIER '[' ']' ':' • KW_VARIABLE_TYPE

    IDENTIFIER  shift, and go to state 52
    KW_INTEGER  shift, and go to state 53
    KW_SCALAR   shift, and go to state 54
    KW_STR      shift, and go to state 55
    KW_BOOLEAN  shift, and go to state 56

    KW_VARIABLE_TYPE  go to state 68


State 60

   19 expr: IDENTIFIER '[' expr ']' •
   27     | IDENTIFIER '[' expr ']' • ASSIGNMENT_OP expr

    ASSIGNMENT_OP  shift, and go to state 69

    $default  reduce using rule 19 (expr)


State 61

    9 func_call: IDENTIFIER '(' func_args ')' •

    $default  reduce using rule 9 (func_call)


State 62

   13 func_args: func_args ',' • expr
   14          | func_args ',' • STRING

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    STRING          shift, and go to state 70
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 71


State 63

   32 VALUE: POSINT •

    $default  reduce using rule 32 (VALUE)


State 64

   34 VALUE: STRING •

    $default  reduce using rule 34 (VALUE)


State 65

   33 VALUE: REAL •

    $default  reduce using rule 33 (VALUE)


State 66

   31 variable_definition: KW_CONST IDENTIFIER ASSIGNMENT_OP VALUE • ':' KW_VARIABLE_TYPE

    ':'  shift, and go to state 72


State 67

   29 variable_definition: IDENTIFIER '[' POSINT ']' ':' • KW_VARIABLE_TYPE

    IDENTIFIER  shift, and go to state 52
    KW_INTEGER  shift, and go to state 53
    KW_SCALAR   shift, and go to state 54
    KW_STR      shift, and go to state 55
    KW_BOOLEAN  shift, and go to state 56

    KW_VARIABLE_TYPE  go to state 73


State 68

   30 variable_definition: IDENTIFIER '[' ']' ':' KW_VARIABLE_TYPE •

    $default  reduce using rule 30 (variable_definition)


State 69

   27 expr: IDENTIFIER '[' expr ']' ASSIGNMENT_OP • expr

    IDENTIFIER      shift, and go to state 22
    POSINT          shift, and go to state 5
    REAL            shift, and go to state 6
    UNARY_OP        shift, and go to state 9
    LOGICAL_NOT_OP  shift, and go to state 10
    '('             shift, and go to state 11

    expr  go to state 74


State 70

   14 func_args: func_args ',' STRING •

    $default  reduce using rule 14 (func_args)


State 71

   13 func_args: func_args ',' expr •
   20 expr: expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr

    EXPONENTIATION_OP  shift, and go to state 28
    CALC_OP            shift, and go to state 29
    RELATIONAL_OP      shift, and go to state 30
    LOGICAL_AND_OR_OP  shift, and go to state 31

    $default  reduce using rule 13 (func_args)


State 72

   31 variable_definition: KW_CONST IDENTIFIER ASSIGNMENT_OP VALUE ':' • KW_VARIABLE_TYPE

    IDENTIFIER  shift, and go to state 52
    KW_INTEGER  shift, and go to state 53
    KW_SCALAR   shift, and go to state 54
    KW_STR      shift, and go to state 55
    KW_BOOLEAN  shift, and go to state 56

    KW_VARIABLE_TYPE  go to state 75


State 73

   29 variable_definition: IDENTIFIER '[' POSINT ']' ':' KW_VARIABLE_TYPE •

    $default  reduce using rule 29 (variable_definition)


State 74

   20 expr: expr • CALC_OP expr
   21     | expr • EXPONENTIATION_OP expr
   22     | expr • RELATIONAL_OP expr
   23     | expr • LOGICAL_AND_OR_OP expr
   27     | IDENTIFIER '[' expr ']' ASSIGNMENT_OP expr •

    $default  reduce using rule 27 (expr)


State 75

   31 variable_definition: KW_CONST IDENTIFIER ASSIGNMENT_OP VALUE ':' KW_VARIABLE_TYPE •

    $default  reduce using rule 31 (variable_definition)
